[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 91 products, 11 sources, 3 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/models/DataObj.scala, ${BASE}/src/main/scala/models/Regression.scala, ${BASE}/src/main/scala/models/RidgeRegression.scala, ${BASE}/src/main/scala/models/SymbolicRegression.scala, ${BASE}/src/main/scala/models/CubicX_Regression.scala, ${BASE}/src/main/scala/models/SymRidgeRegression.scala, ${BASE}/src/main/scala/models/SymReg.scala, ${BASE}/src/main/scala/models/QuadX_Regression.scala, ${BASE}/src/main/scala/models/LassoRegression.scala, ${BASE}/src/main/scala/models/SymLassoRegression.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/main/scala/models/test.scala), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/main/scala/models/test.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(scalation.modeling.test, scalation.modeling.test$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(scalation.modeling.test, scalation.modeling.test$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scalation.modeling.test, scalation.modeling.test$package[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scalation.modeling.test...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scalation.modeling.test[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scalation.modeling.test)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scalation.modeling.test,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(Object;init;,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(test;init;,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(test,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(main,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The scalation.modeling.test has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(Object;init;,[Default]), UsedName(##,[Default]), UsedName(ne,[Default]), UsedName(test;init;,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(test,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(main,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scalation.modeling.test)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from scalation.modeling.test$package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: scalation.modeling.test$package[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(scalation.modeling.test$package)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(scalation.modeling.test$package,ModifiedNames(changes = UsedName(toString,[Default]), UsedName(Object;init;,[Default]), UsedName(##,[Default]), UsedName(test$package,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(test,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(test$package;init;$,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The scalation.modeling.test$package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toString,[Default]), UsedName(Object;init;,[Default]), UsedName(##,[Default]), UsedName(test$package,[Default]), UsedName(ne,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(test,[Default]), UsedName(hashCode,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(test$package;init;$,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(scalation.modeling.test$package)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
