[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:21:0 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m21 |[0m[33mobject[0m [35mSymRidgeRegression[0m:[0m
[0m[[0m[31merror[0m] [0m[0m   |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m   |SymRidgeRegression is already defined as [33mobject[0m [35mSymRidgeRegression[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:133:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m133 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest is already defined as [33mmethod[0m [35msymRidgeRegressionTest[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m134 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m135 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m136 |[0m    banner ([31m"auto_mpg Symbolic Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m137 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression (x, y, x_fname, Set (-[31m2[0m, -[31m1[0m, [31m0.5[0m, [31m2[0m))    [34m// add cross-terms and given powers[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m138 |[0m    mod.trainNtest ()()                                                   [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m139 |[0m    println (mod.summary ())                                              [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m140 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m [0m
[0m[[0m[31merror[0m] [0m[0m[31m141 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m142 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                       [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m143 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m144 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m145 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m146 |[0m                   [31ms"R^2 vs n for Symbolic Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m147 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m148 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m149 |[0m[33mend[0m symRidgeRegressionTest[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:163:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m163 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest2[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest2 is already defined as [33mmethod[0m [35msymRidgeRegressionTest2[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m164 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m165 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m166 |[0m    banner ([31m"auto_mpg Quadratic Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m167 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression.quadratic (x, y, x_fname)                [34m// add x^2 terms[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m168 |[0m    mod.trainNtest ()()                                                   [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m169 |[0m    println (mod.summary ())                                              [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m170 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m171 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m172 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                       [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m173 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m174 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m175 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m176 |[0m                   [31ms"R^2 vs n for Quadratic Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m177 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m178 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m179 |[0m[33mend[0m symRidgeRegressionTest2[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:193:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m193 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest3[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest3 is already defined as [33mmethod[0m [35msymRidgeRegressionTest3[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m194 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m195 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m196 |[0m    banner ([31m"auto_mpg Quadratic X Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m197 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression.quadratic (x, y, x_fname, [31mtrue[0m)          [34m// add cross-terms and x^2 terms[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m198 |[0m    mod.trainNtest ()()                                                   [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m199 |[0m    println (mod.summary ())                                              [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m200 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m [0m
[0m[[0m[31merror[0m] [0m[0m[31m201 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m202 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                       [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m203 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m204 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m205 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m206 |[0m                   [31ms"R^2 vs n for Quadratic X Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m207 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m208 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m209 |[0m[33mend[0m symRidgeRegressionTest3[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:223:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m223 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest4[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest4 is already defined as [33mmethod[0m [35msymRidgeRegressionTest4[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m224 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m225 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m226 |[0m    banner ([31m"auto_mpg Cubic Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m227 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression.cubic (x, y, x_fname)                    [34m// add x^2 and x^3 terms[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m228 |[0m    mod.trainNtest ()()                                                   [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m229 |[0m    println (mod.summary ())                                              [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m230 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m [0m
[0m[[0m[31merror[0m] [0m[0m[31m231 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m232 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                       [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m233 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m234 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m235 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m236 |[0m                   [31ms"R^2 vs n for Cubic Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m237 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m238 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m239 |[0m[33mend[0m symRidgeRegressionTest4[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:253:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m253 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest5[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest5 is already defined as [33mmethod[0m [35msymRidgeRegressionTest5[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m254 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m255 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m256 |[0m    banner ([31m"auto_mpg Cubic X Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m257 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression.cubic (x, y, x_fname, [31mtrue[0m)              [34m// add cross-terms, x^2 and x^3 terms[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m258 |[0m    mod.trainNtest ()()                                                   [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m259 |[0m    println (mod.summary ())                                              [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m260 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m [0m
[0m[[0m[31merror[0m] [0m[0m[31m261 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m262 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                       [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m263 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m264 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m265 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m266 |[0m                   [31ms"R^2 vs n for Cubic X Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m267 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m268 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m269 |[0m[33mend[0m symRidgeRegressionTest5[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:284:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m284 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest6[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest6 is already defined as [33mmethod[0m [35msymRidgeRegressionTest6[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m285 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m286 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m287 |[0m    banner ([31m"auto_mpg Cubic XX Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m288 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression.cubic (x, y, x_fname,                  [34m// add x^2 and x^3 terms[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m289 |[0m                                        [31mtrue[0m, [31mtrue[0m)                     [34m// add cross and cross3 terms[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m290 |[0m    mod.trainNtest ()()                                                 [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m291 |[0m    println (mod.summary ())                                            [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m292 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m293 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m294 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                     [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m295 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m296 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m297 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m298 |[0m                   [31ms"R^2 vs n for Cubic XX Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m299 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m300 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m301 |[0m[33mend[0m symRidgeRegressionTest6[0m
[0m[[0m[31merror[0m] [0m[0m[31m-- [E161] Naming Error: /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymRidgeRegression.scala:316:10 [0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m316 |[0m[35m@main[0m [33mdef[0m [36msymRidgeRegressionTest7[0m (): [35mUnit[0m =[0m
[0m[[0m[31merror[0m] [0m[0m    |[31m^[0m[0m
[0m[[0m[31merror[0m] [0m[0m    |symRidgeRegressionTest7 is already defined as [33mmethod[0m [35msymRidgeRegressionTest7[0m in /Users/sdk/Desktop/UGA_proj/DS2_P1/scala/scalaTion_reg_models/src/main/scala/models/SymLassoRegression.scala[0m
[0m[[0m[31merror[0m] [0m[0m    |[0m
[0m[[0m[31merror[0m] [0m[0m    |Note that overloaded methods must all be defined in the same group of toplevel definitions[0m
[0m[[0m[31merror[0m] [0m[0m[31m317 |[0m[34m//  println (s"x = $x")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m318 |[0m[34m//  println (s"y = $y")[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m319 |[0m    banner ([31m"auto_mpg Symbolic Ridge Regression"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m320 |[0m    [33mval[0m [36mmod[0m = SymRidgeRegression.rescale (x, y, x_fname,[0m
[0m[[0m[31merror[0m] [0m[0m[31m321 |[0m                                          Set (-[31m2[0m, -[31m1[0m, [31m0.5[0m, [31m2[0m))          [34m// add cross-terms and given powers[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m322 |[0m    mod.trainNtest ()()                                                  [34m// train and test the model[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m323 |[0m    println (mod.summary ())                                             [34m// parameter/coefficient statistics[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m324 |[0m    [33mfor[0m tech <- Predictor.SelectionTech.values [33mdo[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m325 |[0m        banner ([31ms"Feature Selection Technique: [0m$tech[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m326 |[0m        [33mval[0m (cols, rSq) = mod.selectFeatures (tech)                      [34m// R^2, R^2 bar, R^2 cv[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m327 |[0m        [33mval[0m [36mk[0m = cols.size[0m
[0m[[0m[31merror[0m] [0m[0m[31m328 |[0m        println ([31ms"k = [0m$k[31m, n = [0m${x.dim2}[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m329 |[0m        [33mnew[0m [35mPlotM[0m ([31mnull[0m, rSq.transpose, Array ([31m"R^2"[0m, [31m"R^2 bar"[0m, [31m"R^2 cv"[0m),[0m
[0m[[0m[31merror[0m] [0m[0m[31m330 |[0m                   [31ms"R^2 vs n for Symbolic Ridge Regression with [0m$tech[31m"[0m, lines = [31mtrue[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m331 |[0m        println ([31ms"[0m$tech[31m: rSq = [0m$rSq[31m"[0m)[0m
[0m[[0m[31merror[0m] [0m[0m[31m332 |[0m    [33mend[0m [33mfor[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m333 |[0m[33mend[0m symRidgeRegressionTest7[0m
[0m[[0m[31merror[0m] [0m[0m8 errors found[0m
[0m[[0m[31merror[0m] [0m[0m8 errors found[0m
